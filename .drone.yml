---
kind: pipeline
name: validate

steps:
  - name: yamllint
    image: sdesbure/yamllint:latest
    commands:
      - yamllint -c ./.yamllint .

  - name: docker-compose
    image: tmaier/docker-compose:latest
    commands:
      - mv prd-bazarr-app.env.example prd-bazarr-app.env
      - mv prd-prowlarr-app.env.example prd-prowlarr-app.env
      - docker-compose config -q

---
kind: pipeline
type: docker
name: build

depends_on:
  - validate

steps:
  - name: publish bazarr
    image: plugins/docker
    settings:
      username:
        from_secret: docker_registry_username
      password:
        from_secret: docker_registry_password
      registry: docker-registry.theautomation.nl
      repo: docker-registry.theautomation.nl/coen/prd-bazarr-app
      dockerfile: bazarr.dockerfile
      tags:
        - latest

  - name: publish radarr
    image: plugins/docker
    settings:
      username:
        from_secret: docker_registry_username
      password:
        from_secret: docker_registry_password
      registry: docker-registry.theautomation.nl
      repo: docker-registry.theautomation.nl/coen/prd-radarr-app
      dockerfile: radarr.dockerfile
      tags:
        - latest

  - name: publish sonarr
    image: plugins/docker
    settings:
      username:
        from_secret: docker_registry_username
      password:
        from_secret: docker_registry_password
      registry: docker-registry.theautomation.nl
      repo: docker-registry.theautomation.nl/coen/prd-sonarr-app
      dockerfile: sonarr.dockerfile
      tags:
        - latest

  - name: publish prowlarr
    image: plugins/docker
    settings:
      username:
        from_secret: docker_registry_username
      password:
        from_secret: docker_registry_password
      registry: docker-registry.theautomation.nl
      repo: docker-registry.theautomation.nl/coen/prd-prowlarr-app
      dockerfile: prowlarr.dockerfile
      tags:
        - latest

---
kind: pipeline
type: docker
name: upgrade

depends_on:
  - build

steps:
  - name: upgrade
    image: appleboy/drone-ssh
    environment:
      DOCKER_REGISTRY_USERNAME:
        from_secret: docker_registry_username
      DOCKER_REGISTRY_PASSWORD:
        from_secret: docker_registry_password
    settings:
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_user
      password:
        from_secret: ssh_password
      port: 22
      envs:
        - docker_registry_password
        - docker_registry_username
      script_stop: true
      script:
        - cd /home/coen/docker-home-services/${DRONE_REPO_NAME}/
        - git pull
        - docker login docker-registry.theautomation.nl -u $${DOCKER_REGISTRY_USERNAME} -p $${DOCKER_REGISTRY_PASSWORD}
        - docker-compose pull
        - docker logout docker-registry.theautomation.nl

  - name: deploy
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_user
      password:
        from_secret: ssh_password
      port: 22
      script:
        - cd /home/coen/docker-home-services/${DRONE_REPO_NAME}/
        - docker-compose up -d --force-recreate

  - name: clean
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_user
      password:
        from_secret: ssh_password
      port: 22
      script:
        - cd /home/coen/docker-home-services/${DRONE_REPO_NAME}/
        - docker image prune -f
---
kind: pipeline
name: notify webhook

trigger:
  status:
    - success
    - failure

depends_on:
  - upgrade

steps:
  - name: send
    image: plugins/webhook
    settings:
      username:
        from_secret: nodered_endpoint_username
      password:
        from_secret: nodered_endpoint_password
      urls: http://docker-host.lan:1880/drone/notify
      skip_verify: true
      content_type: application/json
      template: |
        {
          "owner": "{{ repo.owner }}",
          "repo": "{{ repo.name }}",
          "status": "{{ build.status }}",
          "buildnumber": "{{ build.number }}",
          "buildlink": "{{ build.link }}"
        }
